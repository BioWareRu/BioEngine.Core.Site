pool:
    vmImage: 'Ubuntu 16.04'

variables:
    Version: 3.0.$(Build.BuildId)

steps:
    - task: UseDotNet@2
      displayName: 'Install .Net Core 3.0'
      inputs:
          packageType: sdk
          version: 3.0.100-preview6-012264
          includePreviewVersions: true
          
    - task: DotNetCoreCLI@2
      displayName: 'Restore packages'
      inputs:
          command: restore
          projects: '**/*.csproj'
          feedsToUse: 'select'
          verbosityRestore: 'minimal'
          vstsFeed: 'BioEngine'

    - task: DotNetCoreCLI@2
      displayName: 'Build project'
      inputs:
          command: custom
          custom: build
          arguments: '--no-restore -c Release'
          projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Create package'
      inputs:
          command: pack
          nobuild: true
          configuration: 'Release'
          versioningScheme: byEnvVar
          versionEnvVar: 'Version'
          verbosityPack: 'minimal'
          packDirectory: '$(build.artifactStagingDirectory)'

    - task: DotNetCoreCLI@2
      displayName: 'Push package to internal feed'
      inputs:
          command: push
          nuGetFeedType: 'internal'
          publishVstsFeed: 'BioEngine'
          versioningScheme: byEnvVar
          versionEnvVar: 'Version'
          
    - task: NuGetCommand@2
      displayName: 'Push package to nuget'
      inputs:
          command: 'push'
          packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
          nuGetFeedType: 'external'
          publishFeedCredentials: 'BRC Nuget'
          
    - task: PublishPipelineArtifact@0
      displayName: 'Publish package as artifact'
      inputs:
          artifactName: 'packages'
          targetPath: '$(Build.ArtifactStagingDirectory)'
